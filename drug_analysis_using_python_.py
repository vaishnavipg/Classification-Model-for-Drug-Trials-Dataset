# -*- coding: utf-8 -*-
"""Drug analysis using python .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gFZVnUoIvErA5dkvEAZMzsRjUHezFPv_
"""

#@title Default title text
import pandas as pd 
import numpy as np 
from sklearn.svm import SVC
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import classification_report

import matplotlib.pyplot as plt

# lets load and read the file

df = pd.read_csv('drugEffects.csv')
df.head()

# To List 15 rows of your data

df[['drugName', 'condition']].head(15)

# To check the list of drugs availabe (top 10)

df['drugName'].value_counts().head(15).plot(kind='bar')
plt.rcParams['figure.figsize'] = (10,7)
plt.show()

# To check the ratings of the drugs 

df['rating'].value_counts().plot(kind='bar')
plt.xlabel('ratings')
plt.show()

# To check the effectiveness of the drugs

df['effectiveness'].value_counts().plot(kind='pie')
plt.show()

df['condition'].value_counts()

# To check the various conditions the medicine cures (top 10) since they are over thousand

df['condition'].value_counts().head(10).plot(kind='bar')
plt.xlabel('condition')
plt.ylabel('drugName')
plt.show()

# splitting data into train and validation

x_train, x_test, y_train, y_test = train_test_split(df, target, test_size=.3)

# To check our target variable 'sideEffects'

df['sideEffects'].value_counts().plot(kind='pie')
plt.ylabel('')
plt.show()

# put target into a seperate columns
target = df.pop('sideEffects')
df.head()

# To convert categorical data to numeric

cols = ['drugName', 'effectiveness', 'condition']

for x in cols:
  df[x] = pd.factorize(df[x])[0]

target = pd.factorize(target)[0]
df.head()